global:
  elasticsearch:
    service:
      name: elasticsearch
      ports:
        restAPI: 9200
  kibanaEnabled: true

security:
  enabled: true
  elasticPassword: P@ssw0rd
  tls:
    restEncryption: false
    autoGenerated: true

ingress:
  enabled: true
  hostname: demo-elasticsearch.terasky.demo # Your Elasticsearch ingress hostname
  annotations:
    kubernetes.io/ingress.allow-http: "false"
  tls: true
  selfSigned: false
  extraTls:
  - secretName: elasticsearch-tls-cert
    hosts:
    - demo-elasticsearch.terasky.demo # Your Elasticsearch ingress hostname
  secrets:
  - name: elasticsearch-tls-cert
    certificate: |- # Set your TLS certificate below
      -----BEGIN CERTIFICATE-----
      MIIFiDCCBHCgAwIBAgITUwAAAI0F..........
      -----END CERTIFICATE-----
    key: |- # Set your private key
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEAsxCU+mvz0Tu4SbD........
      -----END RSA PRIVATE KEY-----

kibana:
  elasticsearch:
    hosts:
    - elasticsearch
    port: 9200
    security:
      auth:
        enabled: true
        elasticsearchPasswordSecret: elasticsearch
        createSystemUser: true
        kibanaPassword: P@ssw0rd # Kibana kibana_system password

  extraConfiguration:
    server.publicBaseUrl: https://demo-kibana.terasky.demo # Your external URL Kibana

  ingress:
    enabled: true
    hostname: demo-kibana.terasky.demo # Your Kibana ingress hostname
    annotations:
      kubernetes.io/ingress.allow-http: "false"
    tls: true
    selfSigned: false
    extraTls:
    - secretName: kibana-tls-cert
      hosts:
      - demo-kibana.terasky.demo # Your Kibana ingress hostname
    secrets:
    - name: kibana-tls-cert
    certificate: |- # Set your TLS certificate below
      -----BEGIN CERTIFICATE-----
      MIIFiDCCBHCgAwIBAgITUwAAAI0F..........
      -----END CERTIFICATE-----
    key: |- # Set your private key
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEAsxCU+mvz0Tu4SbD........
      -----END RSA PRIVATE KEY-----